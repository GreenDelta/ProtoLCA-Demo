syntax = "proto3";
package protolca.services;

option csharp_namespace = "ProtoLCA.Services";
option go_package = ".;protolca";
option java_package = "org.openlca.proto.grpc";
option java_multiple_files = true;
option java_outer_classname = "CommonsProto";

import "olca.proto";

message ProtoDataSet {
  oneof model {
    ProtoActor actor = 1;
    ProtoCurrency currency = 3;
    ProtoDQSystem dq_system = 4;
    ProtoEpd epd = 5;
    ProtoFlow flow = 6;
    ProtoFlowProperty flow_property = 7;
    ProtoImpactCategory impact_category = 8;
    ProtoImpactMethod impact_method = 9;
    ProtoLocation location = 10;
    ProtoParameter parameter = 11;
    ProtoProcess process = 12;
    ProtoProductSystem product_system = 13;
    ProtoProject project = 14;
    ProtoResult result = 15;
    ProtoSocialIndicator social_indicator = 16;
    ProtoSource source = 17;
    ProtoUnitGroup unit_group = 18;
  }
}

// A technosphere flow is a pair of a provider (process, product system, or
// result) and a flow where the flow can be a product or waste flow. For
// products flows, the provider produces this product; thus, has it on the
// output side. For waste flows, the provider consumes this waste flow; thus,
// has it on the input side. In a product system, there can be multiple
// tech-flows with the same product or waste flow but different providers,
// e.g. when there are multiple processes that produce the same product.
message ProtoTechFlow {
  ProtoRef provider = 1;
  oneof flow {
    ProtoRef product = 2;
    ProtoRef waste = 3;
  }
}

message ProtoEnviFlow {
  ProtoRef flow = 1;
  ProtoRef location = 2;
  bool is_input = 3;
}
